RandomFood:
	{
		5%: Amount
		95%: (nothing)
	}
	followed by
	{
		50%: Dish1 Join Randomfood2
		50%: Dish2
	}
	
RandomFood2:
	{
		5%: Amount
		95%: (nothing)
	}
	followed by
	{
		40%: Dish1 Join RandomFood2
		60%: Dish1
	}
	
IngredientList:
	{
		67%: Ingredient(plural) " and " Ingredient(plural)
		33%: Ingredient(plural) ", " Ingredient(plural) " and " Dish3
	}
	
Dish1:
	{
		12%: IngredientList
		22%: Ingredient(plural)
		22%: Ingredient(singular) Presentation
		22%: Method Ingredient(plural) 
		22%: Method Ingredient(singular) Presentation
	}

Dish2:
	{
		12%: IngredientList
		29%: Ingredient(singular) Presentation
		29%: Method Ingredient(plural)
		30%: Method Ingredient(singular) Presentation
	}
	
Dish3:
	{
		33%: Ingredient(singular) Presentation
		33%: Method Ingredient(plural)
		34%: Ingredient(plural)
	}


Notes: 
* The complex structure is to avoid degenerate dishes consisting of a single unmodified ingredient.
* To generate a random food, use the toplevel item "RandomFood"
* Method, Ingredient, Presentation, Join and Amount are generated by emitting a random line of text from the corresponding file.
* Strip out any % or $ or # symbols from the beginning of Ingredients (these symbols are there to correctly generate plurals).
* If Ingredient is generated as plural, perform the following:
	- add "s" if the ingredient begins with a %
	- add "es" if the the ingredient begins with a $
	- remove last letter and add "ies" if the the ingredient begins with a #
	- don't pluralise at all otherwise.
* When emitting an Ingredient, there is a 2% chance that it will emit two Ingredients from the file instead.
* Make sure the first letter is made upper-case.

	

